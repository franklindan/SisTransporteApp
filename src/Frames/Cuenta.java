/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;
import Frames.Log;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Franklin
 */
public class Cuenta extends javax.swing.JInternalFrame {
    static Connection conn=null;
    static Statement st=null;
    static ResultSet rs=null;
    static String tipo="";

    /**
     * Creates new form Cuenta
     */
    public Cuenta() {
        initComponents();
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setIconifiable(true);
        mostrar(Log.dni);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtCelular = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDomicilio = new javax.swing.JTextField();
        txtBanco = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        txtC = new javax.swing.JPasswordField();
        txtCc = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();

        setTitle("Informaci칩n de usuario");

        jLabel1.setText("Informaci칩n de usuario:");

        jLabel2.setText("DNI:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Apellido:");

        jLabel5.setText("Contrase침a:");

        jLabel6.setText("Celular:");

        jLabel7.setText("Email:");

        jLabel8.setText("Cuenta de banco:");

        jLabel9.setText("Domicilio:");

        txtDni.setEditable(false);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/guardar.png"))); // NOI18N
        btnAgregar.setText("Guardar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel10.setText("Cambiar contrase침a:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCc, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregar))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7))
                            .addGap(226, 226, 226)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(38, 38, 38)
                                    .addComponent(txtBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        try {
            conn=App.ConnectionBd.Enlace(conn);
            st=App.ConnectionBd.sta(st);
            
            String nombre,apellido,contrase침a,ccontrase침a,email,banco,domicilio,celular,psw="",sSQL;
            int dni;
            
            nombre=txtNombre.getText();
            apellido=txtApellido.getText();
            contrase침a=getMD5(String.valueOf(txtC.getPassword()));
            ccontrase침a=getMD5(String.valueOf(txtCc.getPassword()));
            email=txtEmail.getText();
            banco=txtBanco.getText();
            domicilio=txtDomicilio.getText();
            celular=txtCelular.getText();
            dni=Log.dni;
            
            //Consultamos el tipo de usuario
            try {
            conn=App.ConnectionBd.Enlace(conn);
            String sql1="Select tipoUsua,paswUsua from Usuario where usuaUsua="+Log.dni+";";
            
            Statement st1=conn.createStatement();
            ResultSet rs1=st1.executeQuery(sql1);
            
            while(rs1.next()) {
                tipo=(String)rs1.getString(1);
                psw=(String)rs1.getString(2);
            }
            //conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al buscar datos, verifique porfavor");
            }
            
            //Actulizamos los datos del tipo de usuario
            if (nombre.equals("")){
                JOptionPane.showMessageDialog(null, "Campos sin llenar");
                txtNombre.grabFocus();
            } else {
                //Administrador
                if(tipo.equals("Administrador")){
                    if (contrase침a.equals(psw)){
                        sSQL="update Administrador set nombAdmi='"
                            +nombre+"',apelAdmi='"+apellido+"',celuAdmi='"+celular
                            +"',coreAdmi='"+email+"',cuenBancAdmi='"+banco+"',direAdmi='"+domicilio+"' where dniAdmi='"+Log.dni+"';";
                        try{
                            Statement st=(Statement) conn.createStatement();
                            st.executeUpdate(sSQL);
                            JOptionPane.showMessageDialog(null, "Registro exitoso");
                        } catch (SQLException ex){
                            JOptionPane.showMessageDialog(null, "Introduzca los datos correctamente");
                        }
                        if (!ccontrase침a.equals(getMD5(""))){
                            sSQL="update Usuario set paswUsua='"+ccontrase침a+"' where usuaUsua='"+Log.dni+"';";
                            try{
                                Statement st=(Statement) conn.createStatement();
                                st.executeUpdate(sSQL);
                                JOptionPane.showMessageDialog(null, "Contrase침a cambiada correctamente");
                            } catch (SQLException ex){
                                JOptionPane.showMessageDialog(null, "Introduzca los datos correctamente");
                            }
                        }    
                    } else {
                        JOptionPane.showMessageDialog(null, "Ingrese su contrase침a correctamente.");
                    }
                }
                //Empleado
                if(tipo.equals("Empleado")){
                    if (contrase침a.equals(psw)){
                        sSQL="update Empleado set nombEmpl='"
                            +nombre+"',apelEmpl='"+apellido+"',celuEmpl='"+celular
                            +"',coreEmpl='"+email+"',cuenBancEmpl='"+banco+"',direEmpl='"+domicilio+"' where dniEmpl='"+Log.dni+"';";
                        try{
                            Statement st=(Statement) conn.createStatement();
                            st.executeUpdate(sSQL);
                            JOptionPane.showMessageDialog(null, "Registro exitoso");
                        } catch (SQLException ex){
                            JOptionPane.showMessageDialog(null, "Introduzca los datos correctamente");
                        }
                        if (!ccontrase침a.equals(getMD5(""))){
                            sSQL="update Usuario set paswUsua='"+ccontrase침a+"' where usuaUsua='"+Log.dni+"';";
                            try{
                                Statement st=(Statement) conn.createStatement();
                                st.executeUpdate(sSQL);
                                JOptionPane.showMessageDialog(null, "Contrase침a cambiada correctamente");
                            } catch (SQLException ex){
                                JOptionPane.showMessageDialog(null, "Introduzca los datos correctamente");
                            }
                        }    
                    } else {
                        JOptionPane.showMessageDialog(null, "Ingrese su contrase침a correctamente.");
                    }
                }
                //Cliente
                if(tipo.equals("Cliente")){
                    if (contrase침a.equals(psw)){
                        sSQL="update Cliente set nombClie='"
                            +nombre+"',apelClie='"+apellido+"',celuClie='"+celular
                            +"',coreClie='"+email+"',cuenBancClie='"+banco+"',direClie='"+domicilio+"' where dniClie='"+Log.dni+"';";
                        try{
                            Statement st=(Statement) conn.createStatement();
                            st.executeUpdate(sSQL);
                            JOptionPane.showMessageDialog(null, "Registro exitoso");
                        } catch (SQLException ex){
                            JOptionPane.showMessageDialog(null, "Introduzca los datos correctamente");
                        }
                        if (!ccontrase침a.equals(getMD5(""))){
                            sSQL="update Usuario set paswUsua='"+ccontrase침a+"' where usuaUsua='"+Log.dni+"';";
                            try{
                                Statement st=(Statement) conn.createStatement();
                                st.executeUpdate(sSQL);
                                JOptionPane.showMessageDialog(null, "Contrase침a cambiada correctamente");
                            } catch (SQLException ex){
                                JOptionPane.showMessageDialog(null, "Introduzca los datos correctamente");
                            }
                        }    
                    } else {
                        JOptionPane.showMessageDialog(null, "Ingrese su contrase침a correctamente.");
                    }
                }
          
                limpia();
                mostrar(Log.dni);
                conn.close();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al insertar el dato, verifique porfavor.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBanco;
    private javax.swing.JPasswordField txtC;
    private javax.swing.JPasswordField txtCc;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
private void limpia(){
        txtCc.setText("");
        txtC.setText("");
        txtNombre.grabFocus();
        btnAgregar.setText("Guardar");
    }
    private void mostrar (int valor){
        //consultamos por el tipo de usuario
        try {
            conn=App.ConnectionBd.Enlace(conn);
            String psw;
            String sql1="Select tipoUsua,paswUsua from Usuario where usuaUsua="+Log.dni+";";
            
            Statement st1=conn.createStatement();
            ResultSet rs1=st1.executeQuery(sql1);
            
            while(rs1.next()) {
                tipo=(String)rs1.getString(1);
                psw=(String)rs1.getString(2);
            }
            conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al buscar datos, verifique porfavor");
            }

        // sleccionamos sus datos
        try {
            conn=App.ConnectionBd.Enlace(conn);
            String sql1="";
            if (tipo.equals("Administrador"))
                sql1="Select dniAdmi,nombAdmi,apelAdmi,coreAdmi,cuenBancAdmi,direAdmi,celuAdmi from Administrador where dniAdmi="+valor+";";
            if (tipo.equals("Cliente"))
                sql1="Select dniClie,nombClie,apelClie,coreClie,cuenBancClie,direClie,celuClie from Cliente where dniClie="+valor+";";
            if (tipo.equals("Empleado"))
                sql1="Select dniEmpl,nombEmpl,apelEmpl,coreEmpl,cuenBancEmpl,direEmpl,celuEmpl from Empleado where dniEmpl="+valor+";";
            //otra forma
            /*Select u.usuaUsua,u.paswUsua,a.nombAdmi,a.apelAdmi,a.coreAdmi,a.cuenBancAdmi,a.direAdmi,a.celuAdmi,c.nombClie,c.apelClie,
            c.coreClie,c.cuenBancClie,c.direClie,c.celuClie,e.nombEmpl,e.apelEmpl,e.coreEmpl,e.cuenBancEmpl,e.direEmpl,e.celuEmpl 
            from (Usuario u ) left join (Administrador a join Cliente c join Empleado e) on usuaUsua=dniAdmi=dniClie=dniEmpl 
            where usuaUsua=72680374;*/
            Statement st1=conn.createStatement();
            ResultSet rs1=st1.executeQuery(sql1);
            String datos[]=new String[7];
            
            while(rs1.next()) {
                datos[0]=(String)rs1.getString(1);
                datos[1]=(String)rs1.getString(2);
                datos[2]=(String)rs1.getString(3);
                datos[3]=(String)rs1.getString(4);
                datos[4]=(String)rs1.getString(5);
                datos[5]=(String)rs1.getString(6);
                datos[6]=(String)rs1.getString(7);
                //a침adimos a los txt
                txtDni.setText(datos[0]);
                txtNombre.setText(datos[1]);
                txtApellido.setText(datos[2]);
                txtEmail.setText(datos[3]);
                txtBanco.setText(datos[4]);
                txtDomicilio.setText(datos[5]);
                txtCelular.setText(datos[6]);
            }
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al buscar datos, verifique porfavor");
        }
    }
    public static String getMD5(String input) {
        try {
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] messageDigest = md.digest(input.getBytes());
        BigInteger number = new BigInteger(1, messageDigest);
        String hashtext = number.toString(16);

        while (hashtext.length() < 32) {
        hashtext = "0" + hashtext;
        }
        return hashtext;
        }
        catch (NoSuchAlgorithmException e) {
        throw new RuntimeException(e);
        }
    }
}
